{"version":3,"sources":["components/Example/Example.js","utils/constants/constants.js","components/UI/Navigation/Navigation.js","components/UI/Navigation/NavLinks.js","components/UI/Loader/Loader.js","components/Transaction/Transactions.js","store/actions/actions.js","store/actions/transactions.js","store/containers/TransactionsContainer/TransactionsContainer.js","utils/utilMethods/utilMethods.js","utils/formatters/AmountFormat.js","components/UI/AmountInput/AmountInput.js","components/UI/CurrencySelect/CurrencySelect.js","components/Transaction/NewTransaction/NewTransactionForm/UserInputPanels/PaymentDetail/PaymentDetails.js","components/UI/TextInput/TextInput.js","utils/formatters/AccountFormat.js","components/UI/AccountNumberInput/AccountNumberInput.js","components/UI/TextSelect/TextSelect.js","components/Transaction/NewTransaction/NewTransactionForm/UserInputPanels/RecipientDetail/RecipientDetails.js","components/UI/DateTimePicker/DateTimePicker.js","components/Transaction/NewTransaction/NewTransactionForm/UserInputPanels/OtherDetail/OtherDetails.js","components/Transaction/NewTransaction/NewTransactionForm/UserInputPanels/TransferSummary/TransferSummary.js","utils/validators/index.js","components/Transaction/NewTransaction/NewTransactionForm/ValidateNewTransferForm/validateNewTransferForm.js","components/Transaction/NewTransaction/NewTransactionForm/NewTransactionForm.js","components/Transaction/NewTransaction/NewTransactionForm/UserInputPanels/UserInputPanels.js","store/actions/partners.js","store/containers/NewTransactionContainer/NewTransactionContainer.js","components/Transaction/TransactionDetail/TransactionDetail.js","store/containers/TransactionDetailContainer/TransactionDetailContainer.js","components/App.js","serviceWorker.js","store/reducers/transactions.js","store/reducers/partners.js","store/reducers/rootReducer.js","index.js","store/configStore.js"],"names":["Example","_ref","text","react","currencies","value","label","navlinks","icon","react_default","a","createElement","index_es","size","url","MiniDrawer","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","this","props","classes","theme","className","root","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbar","direction","ChevronRight_default","ChevronLeft_default","List_default","links","constants","map","link","es","to","key","ListItem_default","button","ListItemIcon_default","ListItemText_default","primary","getLinkList","content","children","lib_default","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","closeOnToastrClick","React","Component","withStyles","flexGrow","zIndex","overflow","display","height","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","concat","enteringScreen","marginRight","whiteSpace","Object","defineProperty","overflowX","spacing","unit","breakpoints","up","objectSpread","alignItems","justifyContent","padding","mixins","backgroundColor","palette","background","default","paddingTop","withTheme","Loader","message","Typography_Typography_default","LinearProgress_default","Transactions","navigateToTransactionDetail","id","navigate","navigateToNewTransaction","fetchTransactions","_this2","_this$props$transacti","transactions","loading","error","UI_Loader_Loader","toString","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","txn","date","Date","hover","recipientName","amount","ccy","toLocaleDateString","Button_default","fullWidth","CREATE_TRANSACTION_SUCCESS","CREATE_TRANSACTION_FAILURE","FETCH_PARTNERS_SUCCESS","FETCH_PARTNERS_FAILURE","txnURL","fetchTransactionsSuccess","type","payload","fetchTransactionsFailure","fetchTransactionSuccess","transaction","fetchTransactionFailure","createTransaction","dispatch","axios","post","then","toastr","success","actions","catch","createTransactionFailure","connect","array","transactionList","sort","b","keyA","keyB","get","response","AmountFormat","inputRef","onChange","other","objectWithoutProperties","number_format_default","assign","getInputRef","thousandSeparator","textField","margin","minWidth","name","onFocus","onBlur","placeholder","FormControl_default","TextField_default","undefined","helperText","InputProps","inputComponent","startAdornment","InputAdornment_default","flexWrap","formControl","selectEmpty","marginTop","Select_default","autoWidth","inputProps","input","OutlinedInput_default","labelWidth","MenuItem_default","errors","UI_CurrencySelect_CurrencySelect","UI_AmountInput_AmountInput","AccountFormat","format","wrap","textList","InputLabel_default","htmlFor","item","recipientPreset","recipientAccount","partners","toSaveRecipient","frequentPartners","UI_TextSelect_TextSelect","UI_TextInput_TextInput","AccountNumberInput","FormControlLabel_default","control","Switch_default","checked","container","noValidate","core_TextField_default","InputLabelProps","shrink","timing","transferNow","DateTimePicker_DateTimePicker","TransferSummary","transferDetails","info","toLocaleString","validateAccountNumber","accountNumber","slice","validateAmount","validateName","test","match","validateTime","time","today","inputDate","isNaN","validateNewTransferForm","activeStep","VerticalLinearStepper","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","target","account","handleNext","length","handleTransfer","keys","handleBack","newTransaction","recipientToSave","createPartner","transferDate","fetchPartners","steps","stepContents","RecipientDetail_RecipientDetails","PaymentDetail_PaymentDetails","OtherDetail_OtherDetails","UserInputPanels_TransferSummary_TransferSummary","getUserInputPanels","core_Paper_default","Stepper_default","orientation","index","Step_default","StepLabel_default","StepContent_default","actionsContainer","core_Button_default","disabled","square","elevation","resetContainer","marginBottom","partnersURL","fetchPartnersSuccess","fetchPartnersFailure","partner","createPartnerFailure","partnerList","NewTransactionForm","TransactionDetail","navigateToTransactionHistory","fetchTransaction","activeTransaction","library","add","faGhost","faList","faPlus","faCalendarAlt","App","Navigation","components_Example_Example","path","NewTransactionContainer","TransactionDetailContainer","TransactionsContainer","Boolean","window","location","hostname","INITIAL_STATE","deletedTransaction","arguments","action","data","INIT_STATE","partnerLis","combineReducers","toastrReducer","store","enhancers","applyMiddleware","thunk","createStore","apply","rootReducer","configStore","ReactDOM","render","react_redux_es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b55dbf2b.chunk.js","sourcesContent":["import * as React from 'react';\n\n/**\n * Example functional component.\n * Use these when you don't need state in your component, so most of the time when using Redux.\n * It receives properties as an object called 'props' in the params.\n * Most of the time it should extracted using object destructuring, so it is easier to reference them\n * and you can see what you are working with right away.\n */\nconst Example = ({ text }) => (\n    <h1>{text}</h1>\n);\n\nexport default Example;","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\nexport const currencies = [\n    {\n        \"value\": \"USD\",\n        \"label\": \"$\"\n    },\n    {\n        \"value\": \"EUR\",\n        \"label\": \"€\"\n    },\n    {\n        \"value\": \"BTC\",\n        \"label\": \"฿\"\n    },\n    {\n        \"value\": \"JPY\",\n        \"label\": \"¥\"\n    },\n    {\n        \"value\": \"HUF\",\n        \"label\": \"Ft\"\n    }\n];\n\nexport const navlinks = [\n    {\"icon\": <FontAwesomeIcon icon=\"list\" size=\"lg\" />, \"label\": \"Transactions\", \"url\": \"/transactions\"},\n    {\"icon\": <FontAwesomeIcon icon=\"plus\" size=\"lg\"/>, \"label\": \"New Transaction\", \"url\": \"/new-transaction\"},\n    {\"icon\": <FontAwesomeIcon icon=\"ghost\" size=\"lg\" />, \"label\": \"Send\", \"url\": \"/\"},\n    {\"icon\": <FontAwesomeIcon icon=\"ghost\" size=\"lg\"/>, \"label\": \"Drafts\", \"url\": \"/\"}\n];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport getLinkList from './NavLinks';\nimport List from \"@material-ui/core/List/List\";\nimport ReduxToastr from \"react-redux-toastr\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        zIndex: 1,\n        overflow: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        height: 1700\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing.unit * 7,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing.unit * 3,\n        paddingTop: 80,\n\n    },\n});\n\nclass MiniDrawer extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"absolute\"\n                    className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n                >\n                    <Toolbar disableGutters={!this.state.open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerOpen}\n                            className={classNames(classes.menuButton, this.state.open && classes.hide)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            React banking app\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n                    }}\n                    open={this.state.open}\n                >\n                    <div className={classes.toolbar}>\n                        <IconButton onClick={this.handleDrawerClose}>\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                        </IconButton>\n                    </div>\n                    <List>{getLinkList()}</List>\n                </Drawer>\n                <div className={classes.toolbar} />\n                <main className={classes.content}>\n                    {this.props.children}\n                    <ReduxToastr\n                        timeOut={4000}\n                        newestOnTop={false}\n                        preventDuplicates\n                        position=\"bottom-right\"\n                        transitionIn=\"fadeIn\"\n                        transitionOut=\"fadeOut\"\n                        closeOnToastrClick/>\n                </main>\n            </div>\n        );\n    }\n}\n\nMiniDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from \"@reach/router\";\nimport * as constants from \"../../../utils/constants/constants\"\n\n\nexport default function () {\n    const links = constants.navlinks;\n    return (\n        <div>\n            {links.map(link => {\n                return (\n                    <Link to={link.url} key={link.label}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                {link.icon}\n                            </ListItemIcon>\n                            <ListItemText primary={link.label}/>\n                        </ListItem>\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\n\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress/LinearProgress\";\n\nconst Loader = ({message}) => {\n    return (\n        <div className={\"Loader\"}>\n            <Typography>{message}</Typography>\n            <LinearProgress/>\n        </div>\n    );\n};\n\nexport default Loader;","import React, {Component} from 'react';\nimport Table from \"@material-ui/core/Table/Table\";\nimport TableBody from \"@material-ui/core/TableBody/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport {navigate} from \"@reach/router\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Loader from \"../UI/Loader/Loader\";\n\n\nclass Transactions extends Component {\n\n    componentWillMount() {\n        this.props.fetchTransactions();\n    }\n\n    navigateToTransactionDetail = (id) => {\n        navigate(\"/transactions/\" + id)\n    };\n\n    navigateToNewTransaction = () => {\n        navigate(\"/new-transaction\")\n    };\n\n    render() {\n        const {transactions, loading, error} = this.props.transactions;\n\n        if (loading) {\n            return (\n                <Loader message={\"Loading transactions...\"} />\n            )\n        } else if (error) {\n            return (\n                <div>{error.toString()}</div>\n            )\n        }\n\n        return (\n            <div>\n                <h2>\n                    Transaction history\n                </h2>\n                <Paper>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Recipient</TableCell>\n                                <TableCell>Amount</TableCell>\n                                <TableCell>Currency</TableCell>\n                                <TableCell>Date</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {transactions.map(txn => {\n                                const date = new Date(txn.date);\n\n                                return (\n                                    <TableRow hover key={txn.id} onClick={() => {\n                                        this.navigateToTransactionDetail(txn.id)\n                                    }}>\n                                        <TableCell>\n                                            {txn.recipientName}\n                                        </TableCell>\n                                        <TableCell>\n                                            {txn.amount}\n                                        </TableCell>\n                                        <TableCell>\n                                            {txn.ccy}\n                                        </TableCell>\n                                        <TableCell>\n                                            {date.toLocaleDateString()}\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            })}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <br/>\n                <Paper>\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this.navigateToNewTransaction}\n                    > New transaction </Button>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nexport default Transactions;\n","//Transaction list\nexport const FETCH_TRANSACTIONS = 'FETCH_TRANSACTIONS';\nexport const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_TRANSACTIONS_FAILURE = 'FETCH_TRANSACTIONS_FAILURE';\nexport const RESET_TRANSACTIONS = 'RESET_TRANSACTIONS';\n\n// Get Transaction\nexport const FETCH_TRANSACTION = 'FETCH_TRANSACTION';\nexport const FETCH_TRANSACTION_SUCCESS = 'FETCH_TRANSACTION_SUCCESS';\nexport const FETCH_TRANSACTION_FAILURE = 'FETCH_TRANSACTION_FAILURE';\nexport const RESET_TRANSACTION = 'RESET_TRANSACTION';\n\n// Create Transaction\nexport const CREATE_TRANSACTION = \"CREATE_TRANSACTION\";\nexport const CREATE_TRANSACTION_SUCCESS = \"CREATE_TRANSACTION_SUCCESS\";\nexport const CREATE_TRANSACTION_FAILURE = \"CREATE_TRANSACTION_FAILURE\";\nexport const RESET_NEW_TRANSACTION = \"RESET_NEW_TRANSACTION\";\n\n// Fetch parntners\nexport const FETCH_PARTNERS = 'FETCH_PARTNERS';\nexport const FETCH_PARTNERS_SUCCESS = 'FETCH_PARTNERS_SUCCESS';\nexport const FETCH_PARTNERS_FAILURE = 'FETCH_PARTNERS_FAILURE';\nexport const RESET_PARTNERS = 'RESET_PARTNERS';\n\n// Create Partner\nexport const CREATE_PARTNER = \"CREATE_PARTNER\";\nexport const CREATE_PARTNER_SUCCESS = \"CREATE_PARTNER_SUCCESS\";\nexport const CREATE_PARTNER_FAILURE = \"CREATE_PARTNER_FAILURE\";\nexport const RESET_NEW_PARTNER = \"RESET_NEW_PARTNER\";\n","import axios from \"axios\";\nimport {navigate} from \"@reach/router\";\nimport {toastr} from \"react-redux-toastr\";\nimport * as actions from \"./actions\"\n\nconst txnURL = \"https://react-banking-server.herokuapp.com/transactions\";\n\nexport const fetchTransactions = (dispatch) => {\n    axios.get(txnURL)\n        .then(response => dispatch(fetchTransactionsSuccess(response)))\n        .catch(error => dispatch(fetchTransactionsFailure(error)));\n\n    return {\n        type: actions.FETCH_TRANSACTIONS\n    }\n};\n\nexport const fetchTransactionsSuccess =  (transactions) => {\n    return {\n        type: actions.FETCH_TRANSACTIONS_SUCCESS,\n        payload: transactions\n    }\n};\n\nexport const fetchTransactionsFailure = (error) => {\n    return {\n        type: actions.FETCH_TRANSACTIONS_FAILURE,\n        payload: error\n    }\n};\n\nexport const fetchTransaction = (dispatch, id) => {\n    axios.get(txnURL + \"/\" + id)\n        .then(response => dispatch(fetchTransactionSuccess(response)))\n        .catch(error => dispatch(fetchTransactionFailure(error)));\n\n    return {\n        type: actions.FETCH_TRANSACTION\n    }\n};\n\nexport const fetchTransactionSuccess = (transaction) => {\n    return {\n        type: actions.FETCH_TRANSACTION_SUCCESS,\n        payload: transaction\n    }\n};\n\nexport const fetchTransactionFailure = (error) => {\n    return {\n        type: actions.FETCH_TRANSACTION_FAILURE,\n        payload: error\n    }\n};\n\n\nfunction createTransactionSuccess() {\n    navigate(\"/transactions\");\n    toastr.success('Transfer', 'successful');\n\n    return {\n        type: actions.CREATE_TRANSACTION_SUCCESS\n    };\n}\n\nfunction createTransactionFailure(error) {\n    toastr.error(error.toString());\n    return {\n        type: actions.CREATE_TRANSACTION_FAILURE,\n        payload: error\n    };\n}\n\nexport const createTransaction = (dispatch, transaction) => {\n    axios.post(txnURL, transaction)\n        .then(() => dispatch(createTransactionSuccess()))\n        .catch(error => dispatch(createTransactionFailure(error)));\n    return {\n        type: actions.CREATE_TRANSACTION\n    }\n};\n\n","import {connect} from 'react-redux';\nimport Transactions from \"../../../components/Transaction/Transactions\";\nimport {fetchTransactions} from \"../../actions/transactions\";\nimport {sortByDate} from \"../../../utils/utilMethods/utilMethods\";\n\nconst mapStateToProps = (state) => {\n    let transactions = state.transactions.transactionList;\n    transactions.transactions = sortByDate(transactions.transactions);\n    return {\n        transactions: transactions\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchTransactions: () => {\n            dispatch(fetchTransactions(dispatch));\n        }\n    }\n};\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(Transactions);","export const sortByDate = (array) => {\n\n    array.sort(function(a, b){\n        var keyA = new Date(a.date),\n            keyB = new Date(b.date);\n        if(keyA < keyB) return 1;\n        if(keyA > keyB) return -1;\n        return 0;\n    });\n\n    return array;\n};","import React from \"react\";\nimport NumberFormat from \"react-number-format\"\nimport PropTypes from 'prop-types';\n\n\nfunction AmountFormat(props) {\n    const { inputRef, onChange, ...other } = props;\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onChange={onChange}\n            thousandSeparator\n        />\n    );\n}\n\nAmountFormat.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default AmountFormat;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\nimport {withStyles} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport AmountFormat from '../../../utils/formatters/AmountFormat'\n\n\nconst styles = theme => ({\n    textField: {\n        margin: theme.spacing.unit,\n        minWidth: 60,\n        display: \"inline\"\n    },\n});\n\n\n\nconst AmountInput = ({classes, name, label, onChange, onBlur, onFocus, placeholder, value, error, ccy}) => {\n    return (\n        <FormControl className=\"field\">\n            <input type=\"text\"/>\n            <TextField\n                className={classes.textField}\n                fullWidth\n                label={label}\n                error={error !== undefined}\n                helperText={error}\n                variant=\"outlined\"\n                name={name}\n                placeholder={placeholder}\n                value={value}\n                onFocus={onFocus}\n                onChange={onChange}\n                InputProps={{\n                    inputComponent: AmountFormat,\n                    startAdornment: <InputAdornment position=\"start\">{ccy}</InputAdornment>,\n                }}/>\n        </FormControl>\n    );\n};\n\nAmountInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    error: PropTypes.string,\n    ccy: PropTypes.string\n};\n\nexport default withStyles(styles)(AmountInput);","import React  from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput/OutlinedInput\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport {withStyles} from \"@material-ui/core\";\nimport * as constants from \"../../../utils/constants/constants\"\n\n\nconst styles = theme => ({\n    root: {\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n        display: 'block'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n});\n\n\n\nconst CurrencySelect = ({classes, name, label, onChange, onFocus, placeholder, value}) => {\n\n    const currencies = constants.currencies;\n    return (\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Select\n                    autoWidth={true}\n                    variant=\"outlined\"\n                    value={value}\n                    onChange={onChange}\n                    inputProps={{\n                        id: 'ccy-input',\n                    }}\n                    input={\n                        <OutlinedInput\n                            label={label}\n                            id=\"currency\"\n                            name={name}\n                            labelWidth={0}\n                        />\n                    }\n                    >\n                    {currencies.map(ccy => {\n                        return (\n                            <MenuItem key={ccy.label} value={ccy.label}>\n                                {ccy.value}\n                            </MenuItem>\n                        )\n                    })}\n                </Select>\n            </FormControl>\n    );\n};\n\nCurrencySelect.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    placeholder: PropTypes.string,\n    value: PropTypes.string\n};\n\nexport default withStyles(styles)(CurrencySelect);","import React from 'react';\nimport AmountInput from \"../../../../../UI/AmountInput/AmountInput\";\nimport CurrencySelect from \"../../../../../UI/CurrencySelect/CurrencySelect\";\nimport {withStyles} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    root: {\n        display: 'inline',\n        flexWrap: 'wrap',\n    }\n});\n\n const PaymentDetails = ({classes, ccy, amount, onChange, errors, onBlur}) =>(\n        <div className={classes.root}>\n            <CurrencySelect\n                name=\"ccy\"\n                label=\"Currency\"\n                value={ccy}\n                onChange={onChange}\n            />\n            <AmountInput\n                error={errors.amount}\n                name=\"amount\"\n                value={amount}\n                ccy={ccy}\n                label=\"Amount\"\n                onChange={onChange}\n                onBlur={onBlur}\n            />\n        </div>\n    );\n\n\nexport default withStyles(styles)(PaymentDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport {withStyles} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n\n    textField: {\n        margin: theme.spacing.unit,\n    },\n\n});\n\nconst TextInput = ({classes, name, label, onChange, onFocus, placeholder, value, error}) => {\n\n    return (\n        <TextField\n            className={classes.textField}\n            fullWidth\n            label={label}\n            error={error !== undefined}\n            helperText={error}\n            variant=\"outlined\"\n            type=\"text\"\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onFocus={onFocus}\n            onChange={onChange}/>\n    );\n};\n\nTextInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    error: PropTypes.string\n};\n\nexport default withStyles(styles)(TextInput);","import React from \"react\";\nimport NumberFormat from \"react-number-format\"\nimport PropTypes from 'prop-types';\n\n\nfunction AccountFormat(props) {\n    const { inputRef, onChange, ...other } = props;\n\n    return (\n        <NumberFormat\n            {...other}\n            getInputRef={inputRef}\n            onChange={onChange}\n            format={\"### - ##### - ########\"}\n        />\n    );\n}\n\nAccountFormat.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default AccountFormat;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccountFormat from \"../../../utils/formatters/AccountFormat\"\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport {withStyles} from \"@material-ui/core\";\n\n\nconst styles = theme => ({\n\n    textField: {\n        margin: theme.spacing.unit,\n    },\n\n});\n\n\n\nconst TextInput = ({classes, name, label, onChange, onFocus, placeholder, value, error}) => {\n    return (\n        <TextField\n            fullWidth\n            label={label}\n            error={error !== undefined}\n            helperText={error}\n            variant=\"outlined\"\n            name={name}\n            className={classes.textField}\n            placeholder={placeholder}\n            value={value}\n            onFocus={onFocus}\n            onChange={onChange}\n            InputProps={{\n                inputComponent: AccountFormat,\n            }}/>\n    );\n};\n\nTextInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    error: PropTypes.string\n};\n\nexport default withStyles(styles)(TextInput);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput/OutlinedInput\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport {withStyles} from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\n\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        marginLeft: theme.spacing.unit,\n        fullWidth: true,\n        display: 'flex',\n        wrap: 'nowrap'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n});\n\n\nconst TextSelect = ({classes, name, label, onChange, onFocus, placeholder, value, textList}) => {\n    return (\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"textSelect\">{label}</InputLabel>\n            <Select\n                autoWidth={true}\n                variant=\"outlined\"\n                value={value}\n                onChange={onChange}\n                inputProps={{\n                    id: 'textSelect',\n                }}\n                input={\n                    <OutlinedInput\n                        label={label}\n                        id=\"textSelect\"\n                        name={name}\n                        labelWidth={120}\n                    />\n                }\n            >\n                {textList.map(item => {\n                    return (\n                        <MenuItem key={item.id} value={item}>\n                            {item.name}\n                        </MenuItem>\n                    )\n                })}\n            </Select>\n        </FormControl>\n    );\n};\n\nTextSelect.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    placeholder: PropTypes.string,\n    value: PropTypes.string,\n    textList: PropTypes.array\n};\n\nexport default withStyles(styles)(TextSelect);","import React from 'react';\nimport {withStyles} from \"@material-ui/core\";\nimport TextInput from \"../../../../../UI/TextInput/TextInput\";\nimport AccountNumberInput from \"../../../../../UI/AccountNumberInput/AccountNumberInput\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport TextSelect from \"../../../../../UI/TextSelect/TextSelect\";\n\nconst styles = theme => ({\n    root: {\n        display: 'inline',\n        flexWrap: 'wrap',\n    }\n});\n\nconst RecipientDetails = ({classes, recipientPreset, recipientName, recipientAccount, partners, toSaveRecipient, onChange, errors}) => {\n\n    const frequentPartners = (\n        <div>\n            <TextSelect\n                name=\"recipientPreset\"\n                label=\"Choose a frequent partner...\"\n                value={recipientPreset}\n                textList={partners.partners}\n                onChange={onChange}\n            />\n        </div>\n    );\n\n    return (\n        <form className={classes.root}>\n            {!recipientPreset && frequentPartners}\n            <TextInput\n                value={recipientName}\n                name={\"recipientName\"}\n                label={\"First-name Last-name\"}\n                onChange={onChange}\n                error={errors.recipientName}\n            />\n            <AccountNumberInput\n                value={recipientAccount}\n                onChange={onChange}\n                label={\"Account number\"}\n                name=\"recipientAccount\"\n                error={errors.recipientAccount}\n            />\n            {!recipientPreset &&\n            <FormControlLabel\n                control={<Switch\n                    name={\"toSaveRecipient\"}\n                    value=\"toSaveRecipient\"\n                    checked={toSaveRecipient}\n                    onChange={onChange}\n                />}\n                label=\"Save to partners\"\n            />}\n        </form>\n    );\n};\n\nexport default withStyles(styles)(RecipientDetails);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit\n    },\n    icon: {\n        marginRight: theme.spacing.unit,\n        color: 'grey'\n    }\n});\n\nfunction DateTimePicker(props) {\n    const { classes, value, label, onChange, name, error } = props;\n\n    return (\n        <form className={classes.container} noValidate>\n            <TextField\n                fullWidth\n                variant={\"outlined\"}\n                id=\"time\"\n                name={name}\n                value={value}\n                label={label}\n                error={error !== undefined}\n                helperText={error}\n                type=\"datetime-local\"\n                onChange={onChange}\n                className={classes.textField}\n                InputProps={{\n                    startAdornment: <FontAwesomeIcon\n                        icon=\"calendar-alt\"\n                        size=\"lg\" className={classes.icon}/>,\n                }}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n        </form>\n    );\n}\n\nDateTimePicker.propTypes = {\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(DateTimePicker);\n","import React from 'react';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport {withStyles} from \"@material-ui/core\";\nimport DateTimePicker from \"../../../../../UI/DateTimePicker/DateTimePicker\";\n\nconst styles = theme => ({\n    root: {\n        display: 'inline',\n        flexWrap: 'wrap',\n    }\n});\n\nconst OtherDetails = ({classes, timing,errors, transferNow, onChange}) => (\n    <div className={classes.root}>\n\n        <FormControlLabel\n            control={<Switch\n                name={\"transferNow\"}\n                value=\"transferNow\"\n                checked={transferNow}\n                onChange={onChange}\n            />}\n            label=\"Transfer now\"\n        />\n\n        {!transferNow && (\n            <DateTimePicker\n                label={\"Transfer time\"}\n                value={timing}\n                name=\"timing\"\n                onChange={onChange}\n                error={errors.timing}\n            />\n        )}\n    </div>\n);\n\nexport default withStyles(styles)(OtherDetails);","import React from 'react';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Table from \"@material-ui/core/Table/Table\";\nimport TableRow from \"@material-ui/core/TableRow/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody/TableBody\";\n\nconst TransferSummary = ({transferDetails}) => {\n\n    const timing = new Date(transferDetails.timing);\n\n    const info = [\n        {label: \"Recipient's name\", value: transferDetails.recipientName},\n        {label: \"Recipient's account\", value: transferDetails.recipientAccount},\n        {label: \"Amount to transfer\", value: transferDetails.ccy + \" \" + transferDetails.amount},\n        {label: \"Transfer schedule\", value: transferDetails.transferNow ? \"Now\" : timing.toLocaleString()}\n    ];\n\n    return (\n        <Paper>\n            <Table>\n                <TableBody>\n                    {info.map(info => {\n                        return (\n                            <TableRow key={info.label}>\n                                <TableCell>\n                                    {info.label}\n                                </TableCell>\n                                <TableCell>\n                                    {info.value}\n                                </TableCell>\n                            </TableRow>\n                        )\n                    })}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\n\nTransferSummary.propTypes = {};\n\nexport default TransferSummary;","export const validateAccountNumber = (accountNumber) => {\n    if (!accountNumber) return \"Required\";\n\n    if (accountNumber.slice(-1) === ' ') {\n        return \"Has to be 16 digits\"\n    }\n\n    return false;\n};\n\nexport const validateAmount = (amount) => {\n\n    if (amount === \"0\") {\n        return \"Amount should be larger than 0\";\n    }\n\n    if (!amount) {\n        return \"Required\";\n    }\n\n    return false;\n};\n\nexport const validateName = (name) => {\n\n    if (/\\d/.test(name)) {\n        return \"Name should not contain numbers\"\n    }\n\n    var invalidChars = /[!@#^&*()_={}[\\]\\\\|:;+`•Ż∆&$ķ©ń∂ß|«»ć–;––…•Ż∆ķ©ń∂ß@ę¶€ę¶€ę†¶€ź†“‘<>,?]/;\n\n    if (name.match(invalidChars)) {\n        return \"Contains invalid character(s)\"\n    }\n\n    if (!name) {\n        return \"Required\"\n    }\n\n    return false;\n};\n\nexport const validateTime = (time) => {\n    const today = new Date();\n    const inputDate = new Date(time);\n\n    if (isNaN(inputDate)) {\n        return 'Invalid date'\n    }\n\n    if (inputDate < today) {\n        return \"Choose a future date\"\n    }\n\n};\n","import {validateAccountNumber, validateAmount, validateName, validateTime} from \"../../../../../utils/validators\";\n\n\nexport const validateNewTransferForm = (state) => {\n\n    let errors = {};\n    switch (state.activeStep) {\n        case 0:\n            if (validateName(state.recipientName)) {\n                errors.recipientName = validateName(state.recipientName)\n            }\n\n            if (validateAccountNumber(state.recipientAccount)) {\n                errors.recipientAccount = validateAccountNumber(state.recipientAccount)\n            }\n            break;\n        case 1:\n            if (validateAmount(state.amount)) {\n                errors.amount = validateAmount(state.amount)\n            }\n            break;\n        case 2:\n            if (!state.transferNow) {\n                if (validateTime(state.timing)) {\n                    errors.timing = validateTime(state.timing)\n                }\n            }\n            break;\n        default:\n            break;\n    }\n\n    return errors;\n};\n\nexport default validateNewTransferForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport {getUserInputPanels} from \"./UserInputPanels/UserInputPanels\";\nimport validateNewTransferForm from \"./ValidateNewTransferForm/validateNewTransferForm\";\nimport Loader from \"../../../UI/Loader/Loader\";\n\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n    },\n    button: {\n        marginTop: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n    resetContainer: {\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nfunction getSteps() {\n    return ['Recipient details', 'Payment details', 'Other details', 'Transfer Summary'];\n}\n\nclass VerticalLinearStepper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeStep: 0,\n            errors: {},\n            account: '',\n            amount: \"1000\",\n            ccy: '$',\n            recipientName: '',\n            recipientAccount: '',\n            transferNow: 'True',\n            timing: '',\n            recipientPreset: false,\n            transferDate:''\n        };\n    }\n\n    componentWillMount() {\n        this.props.fetchPartners();\n    }\n\n    onChange = (e) => {\n        if (e.target.name === \"toSaveToTemplate\" ||\n            e.target.name === \"toSaveRecipient\" ||\n            e.target.name === \"transferNow\") {\n            this.setState({\n                [e.target.name]: e.target.checked\n            });\n        } else if (e.target.name === \"recipientPreset\"){\n            this.setState({\n                recipientPreset: true,\n                recipientName: e.target.value.name,\n                recipientAccount: e.target.value.account\n            })\n        } else {\n            this.setState({\n                [e.target.name]: e.target.value\n            });\n        }\n    };\n\n    handleNext = () => {\n\n        if (this.state.activeStep === getSteps().length - 1) {\n            this.handleTransfer()\n        }\n\n        const errors = validateNewTransferForm(this.state);\n\n        this.setState({errors: errors}, () => {\n            if (Object.keys(this.state.errors).length === 0) {\n                this.setState(state => ({\n                    activeStep: state.activeStep + 1,\n                }));\n            }\n        });\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1,\n        }));\n    };\n\n    handleTransfer = () => {\n\n        const newTransaction = {\n            amount: this.state.amount,\n            recipientName: this.state.recipientName,\n            recipientAccount: this.state.recipientAccount,\n            ccy: this.state.ccy,\n            timing: this.state.timing\n        };\n        this.props.createTransaction(newTransaction);\n\n        if (this.state.toSaveRecipient) {\n            const recipientToSave = {\n                name: this.state.recipientName,\n                account: this.state.recipientAccount\n            };\n            this.props.createPartner(recipientToSave);\n        }\n    };\n\n    render() {\n        const {classes, newTransaction, partners} = this.props;\n        const steps = getSteps();\n        const {activeStep} = this.state;\n        const stepContents = getUserInputPanels(this.state, partners, this.onChange);\n\n        if (newTransaction.error) {\n            return (\n                <div>Oops, something went wrong....</div>\n            )\n        }\n\n        return (\n            <div className={classes.root}>\n                <h2>New transfer form: </h2>\n                <Paper>\n                    <Stepper activeStep={activeStep} orientation=\"vertical\">\n                        {steps.map((label, index) => {\n                            return (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                    <StepContent>\n                                        <div>\n                                            {stepContents[index]}\n                                        </div>\n                                        <div className={classes.actionsContainer}>\n                                            <div>\n                                                <Button\n                                                    disabled={activeStep === 0}\n                                                    onClick={this.handleBack}\n                                                    className={classes.button}\n                                                >\n                                                    Back\n                                                </Button>\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    onClick={this.handleNext}\n                                                    className={classes.button}\n                                                >\n                                                    {activeStep === steps.length - 1 ? 'Transfer' : 'Next'}\n                                                </Button>\n                                            </div>\n                                        </div>\n                                    </StepContent>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                </Paper>\n                {activeStep === steps.length && (newTransaction.loading) && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Loader message={\"Transferring funds...\"}/>\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nVerticalLinearStepper.propTypes = {\n    classes: PropTypes.object,\n};\n\nexport default withStyles(styles)(VerticalLinearStepper);\n","import PaymentDetails from \"./PaymentDetail/PaymentDetails\";\nimport RecipientDetails from \"./RecipientDetail/RecipientDetails\";\nimport OtherDetails from \"./OtherDetail/OtherDetails\";\nimport TransferSummary from \"./TransferSummary/TransferSummary\";\nimport React from 'react';\n\n\nexport const getUserInputPanels = (state, partners, onChange) => {\n\n    const panels = [\n        <RecipientDetails\n                recipientName={state.recipientName}\n                toSaveRecipient={state.toSaveRecipient}\n                recipientAccount={state.recipientAccount}\n                partners={partners}\n                recipientPreset={state.recipientPreset}\n                onChange={onChange}\n                errors={state.errors}\n        />,\n        <PaymentDetails\n            amount={state.amount}\n            ccy={state.ccy}\n            onChange={onChange}\n            errors={state.errors}\n        />,\n        <OtherDetails\n            transferNow={state.transferNow}\n            timing={state.timing}\n            onChange={onChange}\n            errors={state.errors}\n        />,\n        <TransferSummary\n            transferDetails={state}\n        />\n    ];\n\n    return panels;\n}","import * as actions from \"./actions\"\nimport * as axios from \"axios\";\nimport {toastr} from \"react-redux-toastr\";\n\nconst partnersURL = \"https://react-banking-server.herokuapp.com/partners\";\n\n\nfunction fetchPartnersSuccess(partners) {\n    return {\n        type: actions.FETCH_PARTNERS_SUCCESS,\n        payload: partners\n    };\n}\n\nfunction fetchPartnersFailure(error) {\n    return {\n        type: actions.FETCH_PARTNERS_FAILURE,\n        payload: error\n    };\n}\n\nexport const fetchPartners = (dispatch) => {\n    axios.get(partnersURL)\n        .then((partners)=> dispatch(fetchPartnersSuccess(partners)))\n        .catch((error)=> dispatch(fetchPartnersFailure(error)));\n\n    return {\n        type: actions.FETCH_PARTNERS\n    }\n};\n\nfunction createPartnerSuccess() {\n    toastr.info('Recipient saved to frequent partners');\n    return {\n        type: actions.CREATE_TRANSACTION_SUCCESS\n    };\n}\n\n\nfunction createPartnerFailure(error) {\n    toastr.error('Could not save partner');\n    return {\n        type: actions.CREATE_TRANSACTION_FAILURE,\n        payload: error\n    };\n}\n\nexport const createPartner = (dispatch, partner) => {\n    axios.post(partnersURL, partner)\n        .then(() => dispatch(createPartnerSuccess()) )\n        .catch((error) => dispatch(createPartnerFailure(error)));\n\n    return {\n        type: actions.CREATE_PARTNER\n    }\n};\n\n","import {connect} from 'react-redux';\nimport NewTransactionForm from \"../../../components/Transaction/NewTransaction/NewTransactionForm/NewTransactionForm\";\nimport {createTransaction} from \"../../actions/transactions\";\nimport {createPartner, fetchPartners} from \"../../actions/partners\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createTransaction: (transaction) => {dispatch(createTransaction(dispatch, transaction))},\n        createPartner: (partner) => {dispatch(createPartner(dispatch, partner))},\n        fetchPartners: () => {dispatch(fetchPartners(dispatch))}\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        newTransaction: state.transactions.newTransaction,\n        partners: state.partners.partnerList\n    };\n};\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(NewTransactionForm);","import React, {Component} from 'react';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Table from \"@material-ui/core/Table/Table\";\nimport TableBody from \"@material-ui/core/TableBody/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport {navigate} from \"@reach/router\";\nimport Loader from \"../../UI/Loader/Loader\";\n\nclass TransactionDetail extends Component {\n\n    componentWillMount() {\n        this.props.fetchTransaction(this.props.id);\n    }\n\n    navigateToTransactionHistory = () => {\n        navigate(\"/transactions\")\n    };\n\n    render() {\n        const {transaction, loading, error} = this.props.transaction;\n\n        if (loading) {\n            return (\n                <Loader message={\"Loading transaction details...\"}/>\n            )\n        } else if (error) {\n            return (\n                <div>Oops, error :/</div>\n            )\n        }\n\n\n        return (\n            <div>\n                <h2>Transaction details:</h2>\n                <Paper>\n\n                    <Table>\n                        <TableBody>\n                            {Object.keys(transaction).map(key => {\n                                return (\n                                    <TableRow key={key}>\n                                        <TableCell>\n                                            {key}\n                                        </TableCell>\n                                        <TableCell>\n                                            {transaction[key]}\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            })}\n\n                        </TableBody>\n\n                    </Table>\n                </Paper>\n                <br/>\n                <Paper>\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this.navigateToTransactionHistory}\n                    > Back to transaction history</Button>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nexport default TransactionDetail;","import {connect} from 'react-redux';\nimport TransactionDetail from \"../../../components/Transaction/TransactionDetail/TransactionDetail\";\nimport {fetchTransaction} from \"../../actions/transactions\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchTransaction: (id)=> {dispatch(fetchTransaction(dispatch, id))}\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        transaction: state.transactions.activeTransaction\n    };\n};\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(TransactionDetail);","import React, {Component} from 'react';\nimport './App.css';\nimport Example from \"./Example/Example\";\nimport {Router} from \"@reach/router\";\nimport Navigation from \"./UI/Navigation/Navigation\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faGhost, faList, faPlus, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\nimport TransactionsContainer from \"../store/containers/TransactionsContainer/TransactionsContainer\";\nimport NewTransactionContainer from \"../store/containers/NewTransactionContainer/NewTransactionContainer\";\nimport TransactionDetailContainer from \"../store/containers/TransactionDetailContainer/TransactionDetailContainer\";\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\n\n\n\nlibrary.add(faGhost, faList, faPlus, faCalendarAlt);\n\nclass App extends Component {\n    render() {\n        return (\n            <Navigation>\n                <Router>\n                    <Example text={\"React banking\"} path=\"/\"/>\n                    <NewTransactionContainer path=\"/new-transaction\"/>\n                    <TransactionDetailContainer path=\"transactions/:id\" />\n                    <TransactionsContainer path=\"transactions\">\n                    </TransactionsContainer>\n                </Router>\n            </Navigation>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actions from \"../actions/actions\"\n\n\nconst INITIAL_STATE = {\n    transactionList: {transactions: [], error: null, loading: true},\n    newTransaction: {transaction: {}, error: null, loading: false},\n    activeTransaction: {transaction: {}, error: null, loading: false},\n    deletedTransaction: {transaction: {}, error: null, loading: false},\n};\n\n\nconst transactions = (state = INITIAL_STATE, action) => {\n    let error;\n    switch (action.type) {\n        case actions.FETCH_TRANSACTIONS:\n            return {...state, transactionList: {transactions: [], error: null, loading: true}};\n        case actions.FETCH_TRANSACTIONS_SUCCESS:\n            return {...state, transactionList: {transactions: action.payload.data, error: null, loading: false}};\n        case actions.FETCH_TRANSACTIONS_FAILURE:\n            error = action.payload || {message: action.payload.message};\n            return {...state, transactionList: {transactions: [], error: error, loading: false}};\n        case actions.RESET_TRANSACTIONS:\n            return {...state, transactionList: {transactions: [], error: null, loading: false}};\n        case actions.CREATE_TRANSACTION:\n            return {...state, newTransaction: {transaction: null, error: null, loading: true}};\n        case actions.CREATE_TRANSACTION_SUCCESS:\n            return {...state, newTransaction: {transaction: null, error: null, loading: false}};\n        case actions.CREATE_TRANSACTION_FAILURE:\n            return {...state, newTransaction: {transaction: null, error: error, loading: false}};\n        case actions.FETCH_TRANSACTION:\n            return {...state, activeTransaction: {transaction: {}, error: null, loading: true}};\n        case actions.FETCH_TRANSACTION_SUCCESS:\n            return {...state, activeTransaction: {transaction: action.payload.data, error: null, loading: false}};\n        case actions.FETCH_TRANSACTION_FAILURE:\n            error = action.payload || {message: action.payload.message};\n            return {...state, activeTransaction: {transaction: {}, error: error, loading: false}};\n        default:\n            return state;\n    }\n};\n\n\nexport default transactions;","import * as actions from \"../actions/actions\"\n\n\nconst INIT_STATE = {\n    partnerList: {partners: [], error: null, loading: false}\n};\n\nconst partners = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case actions.FETCH_PARTNERS:\n            return {...state, partnerLis: {partners: [], error: null, loading: true}};\n        case actions.FETCH_PARTNERS_SUCCESS:\n            return {...state, partnerList: {partners: action.payload.data, error: null, loading: false}};\n        case actions.FETCH_PARTNERS_FAILURE:\n            return {...state, partnerList: {partners: [], error: action.payload, loading: false}};\n        default:\n            return state;\n    }\n};\n\nexport default partners;","import {combineReducers} from \"redux\";\nimport transactions from \"./transactions\";\nimport partners from \"./partners\";\nimport {reducer as toastrReducer} from 'react-redux-toastr'\n\n\nexport default combineReducers({\n    transactions,\n    partners,\n    toastr: toastrReducer // <- Mounted at toastr.\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport configStore from \"./store/configStore\";\nimport {Provider} from \"react-redux\";\n\nconst store = configStore();\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nexport default  () => {\n\n    const enhancers = [applyMiddleware(thunk)];\n\n    const store = createStore(rootReducer, ...enhancers);\n\n    return store;\n}"],"sourceRoot":""}